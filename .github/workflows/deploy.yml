name: 🚀 Deploy Modern Spreadsheet

# 워크플로우 트리거 조건
on:
  # main 브랜치에 push될 때
  push:
    branches: [main, master]

  # Pull Request가 main 브랜치로 올 때
  pull_request:
    branches: [main, master]

  # 수동 실행 가능
  workflow_dispatch:

# Job 정의
jobs:
  # 1. 파일 검증 및 빌드
  build-and-deploy:
    name: 🏗️ Build and Deploy
    runs-on: ubuntu-latest

    # GitHub Pages 배포 권한 설정
    permissions:
      contents: read
      pages: write
      id-token: write

    # 배포 환경 설정 (main 브랜치만)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Verify required files
        run: |
          echo "🔍 Checking required files..."
          if [ ! -f "index.html" ]; then
            echo "❌ index.html not found!"
            exit 1
          fi
          if [ ! -f "styles.css" ]; then
            echo "❌ styles.css not found!"
            exit 1
          fi
          if [ ! -f "app.js" ]; then
            echo "❌ app.js not found!"
            exit 1
          fi
          echo "✅ All required files found!"

      - name: 📊 Show file sizes
        run: |
          echo "📊 File sizes:"
          ls -lh *.html *.css *.js 2>/dev/null || echo "Some files may be missing"
          echo ""
          echo "📈 Total project size:"
          du -sh . 2>/dev/null || echo "Could not calculate size"

      - name: 🔍 Basic HTML validation
        run: |
          echo "🔍 Checking HTML structure..."
          if grep -q "<!DOCTYPE html>" index.html; then
            echo "✅ DOCTYPE found"
          else
            echo "⚠️ DOCTYPE not found"
          fi

          if grep -q "<title>" index.html; then
            echo "✅ Title tag found"
          else
            echo "⚠️ Title tag not found"
          fi

          if grep -q "styles.css" index.html; then
            echo "✅ CSS linked"
          else
            echo "⚠️ CSS not linked"
          fi

          if grep -q "app.js" index.html; then
            echo "✅ JavaScript linked"
          else
            echo "⚠️ JavaScript not linked"
          fi

      - name: 🔍 Basic CSS validation
        run: |
          echo "🔍 Checking CSS structure..."
          if [ -f "styles.css" ]; then
            css_size=$(wc -c < styles.css)
            echo "📏 CSS file size: $css_size bytes"
            
            if grep -q "body" styles.css; then
              echo "✅ Body styles found"
            fi
            
            if grep -q "@media" styles.css; then
              echo "✅ Responsive design detected"
            fi
          fi

      - name: 🔍 Basic JavaScript validation
        run: |
          echo "🔍 Checking JavaScript structure..."
          if [ -f "app.js" ]; then
            js_size=$(wc -c < app.js)
            echo "📏 JavaScript file size: $js_size bytes"
            
            if grep -q "function" app.js; then
              echo "✅ Functions found"
            fi
            
            if grep -q "addEventListener" app.js; then
              echo "✅ Event listeners found"
            fi
            
            if grep -q "document.getElementById" app.js; then
              echo "✅ DOM manipulation found"
            fi
          fi

      - name: 📦 Create deployment directory
        run: |
          echo "📦 Preparing files for deployment..."
          mkdir -p dist
          cp index.html dist/
          cp styles.css dist/
          cp app.js dist/

          # README가 있으면 복사
          if [ -f "README.md" ]; then
            cp README.md dist/
          fi

          echo "✅ Files copied to dist directory"
          echo "📂 Deployment contents:"
          ls -la dist/

      - name: 📄 Setup GitHub Pages
        uses: actions/configure-pages@v4
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

      - name: 🔧 Enable Pages if not enabled
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          echo "📄 Checking GitHub Pages status..."
          echo "If this step fails, please enable GitHub Pages manually in repository settings"
          echo "Go to: Settings > Pages > Source > GitHub Actions"

      - name: 📤 Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        with:
          path: ./dist

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/deploy-pages@v4

  # 2. 배포 후 성능 테스트 (선택적)
  performance-check:
    name: 📊 Performance Check
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: 📊 Install and run basic performance check
        run: |
          echo "📊 Running basic performance analysis..."

          # 파일 크기 분석
          html_size=$(wc -c < index.html)
          css_size=$(wc -c < styles.css)
          js_size=$(wc -c < app.js)
          total_size=$((html_size + css_size + js_size))

          echo "📏 File Size Analysis:"
          echo "  HTML: ${html_size} bytes"
          echo "  CSS:  ${css_size} bytes"
          echo "  JS:   ${js_size} bytes"
          echo "  Total: ${total_size} bytes"

          # 성능 권장사항
          echo ""
          echo "📋 Performance Recommendations:"

          if [ $total_size -gt 1000000 ]; then
            echo "⚠️  Total size > 1MB - Consider optimization"
          else
            echo "✅ Total size is reasonable"
          fi

          if [ $css_size -gt 100000 ]; then
            echo "⚠️  CSS size > 100KB - Consider minification"
          else
            echo "✅ CSS size is good"
          fi

          if [ $js_size -gt 100000 ]; then
            echo "⚠️  JS size > 100KB - Consider minification"
          else
            echo "✅ JavaScript size is good"
          fi

  # 3. 배포 상태 알림
  notify-status:
    name: 📢 Deployment Status
    runs-on: ubuntu-latest
    needs: [build-and-deploy, performance-check]
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: 🎉 Success Notification
        if: needs.build-and-deploy.result == 'success'
        run: |
          echo "🎉 배포 성공!"
          echo "📊 Modern Spreadsheet가 성공적으로 배포되었습니다!"
          echo ""
          echo "🌐 배포된 사이트:"
          echo "   https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo ""
          echo "📋 배포 정보:"
          echo "   Repository: ${{ github.repository }}"
          echo "   Branch: ${{ github.ref_name }}"
          echo "   Commit: ${{ github.sha }}"
          echo "   Actor: ${{ github.actor }}"
          echo ""
          echo "✨ 스프레드시트를 즐겁게 사용하세요!"

      - name: ❌ Failure Notification
        if: needs.build-and-deploy.result == 'failure'
        run: |
          echo "❌ 배포 실패!"
          echo "🔍 다음 사항을 확인해주세요:"
          echo "   1. index.html, styles.css, app.js 파일이 모두 있는지"
          echo "   2. HTML에서 CSS와 JS 파일이 올바르게 링크되어 있는지"
          echo "   3. 파일 경로와 이름이 정확한지"
          echo ""
          echo "📖 자세한 오류 내용은 Actions 로그를 확인해주세요."

      - name: ⚠️ Partial Success
        if: needs.build-and-deploy.result == 'success' && needs.performance-check.result == 'failure'
        run: |
          echo "⚠️ 배포는 성공했지만 성능 체크에서 문제가 발생했습니다."
          echo "🌐 사이트는 정상적으로 작동하지만, 성능을 개선해보세요."
